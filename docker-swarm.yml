version: "3"
networks:
  net:
    driver: overlay
services:
  service-socket:
    image: sticky-socket:latest
    networks:
      - net
    ports:
      - "3000"
    deploy:
      restart_policy:
        condition: any
      mode: replicated
      replicas: 3  
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.service-socket.service=service-socket"
        - "traefik.http.routers.service-socket-poll.service=service-socket"
        - "traefik.http.services.service-socket.loadbalancer.server.port=3000"
        - "traefik.http.routers.service-socket.rule=PathPrefix(`/sticky`)"
        - "traefik.http.routers.service-socket-poll.rule=PathPrefix(`/socket.io`)"
        - "traefik.http.services.service-socket.loadbalancer.sticky.cookie=true"

  nginx:
    image: nginx-proxy:latest
    networks:
      - net
    ports:
      - "8000:80"
    deploy:      
      placement:
         constraints: [node.role == manager]

  loadbalancer:
    image: traefik:v2.4
    command: 
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.swarmMode=true
    ports:
      - 8001:80
      - 9090:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: replicated
      replicas: 1
      placement:
         constraints: [node.role == manager]
    networks:
      - net
